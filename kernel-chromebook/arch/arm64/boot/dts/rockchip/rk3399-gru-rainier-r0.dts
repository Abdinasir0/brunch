/*
 * Google Gru-Rainier Rev0 board device tree source
 *
 * Copyright 2017 Google, Inc
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *  Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "rk3399-gru-scarlet.dtsi"

/ {
	model = "Google Rainier";
	compatible = "google,rainier-rev15", "google,rainier-rev14",
		     "google,rainier-rev13", "google,rainier-rev12",
		     "google,rainier-rev11", "google,rainier-rev10",
		     "google,rainier-rev9",  "google,rainier-rev8",
		     "google,rainier-rev7",  "google,rainier-rev6",
		     "google,rainier-rev5",  "google,rainier-rev4",
		     "google,rainier-rev3",  "google,rainier-rev2",
		     "google,rainier-rev1",  "google,rainier-rev0",
		     "google,rainier", "google,gru", "rockchip,rk3399";

	/* Power Tree */

	/* pp3300 children */

	pp3300_disp: pp3300-disp {
		compatible = "regulator-fixed";
		regulator-name = "pp3300_disp";
		pinctrl-names = "default";
		pinctrl-0 = <&pp3300_disp_en>;

		enable-active-high;
		gpio = <&gpio4 27 GPIO_ACTIVE_HIGH>;

		startup-delay-us = <2000>;
		vin-supply = <&pp3300>;
	};

	pp3300_ts: pp3300_ts {
		compatible = "regulator-fixed";
		regulator-name = "pp3300_ts";
		pinctrl-names = "default";
		pinctrl-0 = <&pp3300_ts_en>;

		/*
		 * Wait for regulators to ramp and touchscreen controller to
		 * initialize firmware.
		 */
		regulator-enable-ramp-delay = <100000>;

		enable-active-high;
		gpio = <&gpio4 30 GPIO_ACTIVE_HIGH>;
		vin-supply = <&pp3300>;
	};

	/* END REGULATORS */

	edp_panel: edp_panel {
		compatible = "sharp,lq123p1jx32", "sharp,lq123p1jx31",
			     "simple-panel";
		backlight = <&backlight>;
		power-supply = <&pp3300_disp>;

		ports {
			panel_in_edp: endpoint {
				remote-endpoint = <&edp_out_panel>;
			};
		};
	};
};

/* REGULATOR OVERRIDES (node deletions first) */

/* No MIPI, so remove related regulators and nodes. */
/delete-node/ &ppvarn_lcd;
/delete-node/ &ppvarn_lcd_en;
/delete-node/ &ppvarp_lcd;
/delete-node/ &ppvarp_lcd_en;
/delete-node/ &vopl_out_mipi;
/delete-node/ &vopb_out_mipi;
/delete-node/ &mipi_dsi;
/delete-node/ &vopl_out_mipi1;
/delete-node/ &vopb_out_mipi1;
/delete-node/ &mipi_dsi1;
/delete-node/ &digitizer;

/* Rainier uses different touch controller, which is defined below. */
/delete-node/ &touchscreen;

/* Define EDP related aliases. */
pp900_edp: &pp900_s0 {
};
pp1800_edp: &pp1800_s0 {
};

/* Add EDP configs. */
&backlight {
	power-supply = <&pp3300_disp>;
};

&edp {
	status = "okay";

	ports {
		edp_out: port@1 {
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;

			edp_out_panel: endpoint@0 {
				reg = <0>;
				remote-endpoint = <&panel_in_edp>;
			};
		};
	};
};

&ap_i2c_dig {
	status = "disabled";
};

&ap_i2c_ts {
	touchscreen: touchscreen@0a {
		compatible = "hid-over-i2c";
		reg = <0x0a>;
		hid-descr-addr = <0x01>;

		pinctrl-names = "default";
		pinctrl-0 = <&touch_int_l &touch_reset_l>;

		power-supply = <&pp3300_ts>;
		assert-reset-us = <40000>;
		deassert-reset-us = <30000>;

		interrupt-parent = <&gpio1>;
		interrupts = <4 IRQ_TYPE_LEVEL_LOW>;

		reset-gpios = <&gpio0 10 GPIO_ACTIVE_LOW>;
	};
};

&discrete_regulators {
	pp3300_disp_en: pp3300-disp-en {
		rockchip,pins = <RK_GPIO4 27 RK_FUNC_GPIO &pcfg_pull_down>;
	};

	pp3300_ts_en: pp3300-ts-en {
		rockchip,pins = <4 30 RK_FUNC_GPIO &pcfg_pull_none>;
	};
};
