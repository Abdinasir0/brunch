PCI bus bridges have standardized Device Tree bindings:

PCI Bus Binding to: IEEE Std 1275-1994
http://www.devicetree.org/open-firmware/bindings/pci/pci2_1.pdf

And for the interrupt mapping part:

Open Firmware Recommended Practice: Interrupt Mapping
http://www.devicetree.org/open-firmware/practice/imap/imap0_9d.pdf

Additionally to the properties specified in the above standards a host bridge
driver implementation may support the following properties:

- linux,pci-domain:
   If present this property assigns a fixed PCI domain number to a host bridge,
   otherwise an unstable (across boots) unique number will be assigned.
   It is required to either not set this property at all or set it for all
   host bridges in the system, otherwise potentially conflicting domain numbers
   may be assigned to root buses behind different host bridges.  The domain
   number for each host bridge in the system must be unique.
- max-link-speed:
   If present this property specifies PCI gen for link capability.  Host
   drivers could add this as a strategy to avoid unnecessary operation for
   unsupported link speed, for instance, trying to do training for
   unsupported link speed, etc.  Must be '4' for gen4, '3' for gen3, '2'
   for gen2, and '1' for gen1. Any other values are invalid.
- pcie-reset-suspend:
   If present this property defines whether the PCIe Reset signal (referred to
   as PERST#) should be asserted when the system enters low-power suspend modes
   (e.g., S3). Depending on the form factor, the associated PCIe
   electromechanical specification may specify a particular behavior (e.g.,
   "PERST# is asserted in advance of the power being switched off in a
   power-managed state like S3") or it may be less clear. The net result is
   that some endpoints perform better (e.g., lower power consumption) with
   PERST# asserted, and others prefer PERST# deasserted. The value must be '0'
   or '1', where '0' means do not assert PERST# and '1' means assert PERST#.
   When absent, behavior may be platform-specific.
